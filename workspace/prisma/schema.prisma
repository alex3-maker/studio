generator client {
  provider        = "prisma-client-js"
  binaryTargets   = ["native", "debian-openssl-3.0.x"]
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String @id @default(cuid())
  name         String
  email        String @unique
  password     String?
  role         Role     @default(USER)
  image        String?
  keys         Int      @default(0)
  duelsCreated Int?     @default(0)
  votesCast    Int?     @default(0)
  createdAt    DateTime @default(now())

  duels Duel[]
  votes Vote[]
}

model Duel {
  id          String  @id @default(cuid())
  type        String
  title       String
  description String?
  creatorId   String
  status      String
  createdAt   DateTime @default(now())
  startsAt    DateTime
  endsAt      DateTime

  creator User         @relation(fields: [creatorId], references: [id], onDelete: Cascade)
  options DuelOption[]
  votes   Vote[]
  guestVotes GuestVote[]

  @@index([creatorId])
}

model DuelOption {
  id           String  @id @default(cuid())
  title        String
  imageUrl     String?
  affiliateUrl String?
  votes        Int     @default(0)
  duelId       String

  duel       Duel        @relation(fields: [duelId], references: [id], onDelete: Cascade)
  votes      Vote[]
  guestVotes GuestVote[]

  @@index([duelId])
}

model Vote {
  id       String @id @default(cuid())
  userId   String
  duelId   String
  optionId String

  user   User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  duel   Duel       @relation(fields: [duelId], references: [id], onDelete: Cascade)
  option DuelOption @relation(fields: [optionId], references: [id], onDelete: Cascade)

  @@unique([userId, duelId])
  @@index([userId])
  @@index([duelId])
  @@index([optionId])
}

model GuestVote {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Text
  duelId    String   @map("duel_id")
  optionId  String   @map("option_id")
  ipHash    String   @map("ip_hash")
  createdAt DateTime @default(now()) @db.Timestamptz

  duel      Duel       @relation(fields: [duelId], references: [id], onDelete: Cascade)
  option    DuelOption @relation(fields: [optionId], references: [id], onDelete: Cascade)

  @@unique([duelId, ipHash], map: "dueliax_guest_votes_duel_ip_unique")
  @@map("dueliax_guest_votes")
}

enum Role {
  USER
  ADMIN
}
