// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://postgres.ukevxalsfdtrfksdksux:z3w7v%25Twu%26%28%29@aws-0-eu-west-1.pooler.supabase.com:6543/postgres?sslmode=require"
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  passwordHash  String?   @map("password_hash")
  avatarUrl     String?
  role          Role      @default(USER)
  keys          Int       @default(5)
  duelsCreated  Int       @default(0)
  votesCast     Int       @default(0)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  duels         Duel[]
  votes         Vote[]
}

model Duel {
  id          String       @id @default(cuid())
  type        String
  title       String
  description String?
  creatorId   String
  creator     User         @relation(fields: [creatorId], references: [id], onDelete: Cascade)
  status      String
  createdAt   DateTime     @default(now())
  startsAt    DateTime
  endsAt      DateTime
  options     DuelOption[]
  guestVotes  GuestVote[]
  votes       Vote[]
}

model DuelOption {
  id           String      @id @default(cuid())
  title        String
  imageUrl     String?
  affiliateUrl String?
  votes        Int         @default(0)
  duelId       String
  duel         Duel        @relation(fields: [duelId], references: [id], onDelete: Cascade)
  userVotes    Vote[]
  guestVotes   GuestVote[]
}

model Vote {
  id        String     @id @default(cuid())
  userId    String
  duelId    String
  optionId  String
  createdAt DateTime   @default(now())
  user      User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  duel      Duel       @relation(fields: [duelId], references: [id], onDelete: Cascade)
  option    DuelOption @relation(fields: [optionId], references: [id], onDelete: Cascade)

  @@unique([userId, duelId])
}

model GuestVote {
  id        String     @id @default(cuid())
  ipHash    String
  duelId    String
  optionId  String
  createdAt DateTime   @default(now())
  duel      Duel       @relation(fields: [duelId], references: [id], onDelete: Cascade)
  option    DuelOption @relation(fields: [optionId], references: [id], onDelete: Cascade)

  @@unique([ipHash, duelId], name: "dueliax_guest_votes_duel_ip_unique")
}

enum Role {
  USER
  ADMIN
}
