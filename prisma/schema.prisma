// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

model User {
  id           String    @id @default(cuid())
  name         String?
  email        String?   @unique
  emailVerified DateTime?
  image        String?
  password     String?
  role         Role      @default(USER)
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  
  keys         Int       @default(5)
  duelsCreated Int       @default(0)
  votesCast    Int       @default(0)

  duels    Duel[]
  votes    Vote[]
}

model Duel {
  id          String   @id @default(cuid())
  title       String
  description String?
  type        String   @default("A_VS_B") // A_VS_B or LIST
  status      String   @default("DRAFT") // DRAFT, SCHEDULED, ACTIVE, CLOSED, INACTIVE
  
  createdAt   DateTime @default(now())
  startsAt    DateTime @default(now())
  endsAt      DateTime
  
  creatorId   String
  creator     User     @relation(fields: [creatorId], references: [id], onDelete: Cascade)
  
  options     DuelOption[]
  guestVotes  GuestVote[]
  votes       Vote[]
}

model DuelOption {
  id           String  @id @default(cuid())
  title        String
  imageUrl     String?
  affiliateUrl String?
  votes        Int     @default(0)
  
  duelId       String
  duel         Duel    @relation(fields: [duelId], references: [id], onDelete: Cascade)
  
  guestVotes   GuestVote[]
  votes        Vote[]
}

model Vote {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  
  userId    String
  duelId    String
  optionId  String
  
  user      User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  duel      Duel       @relation(fields: [duelId], references: [id], onDelete: Cascade)
  option    DuelOption @relation(fields: [optionId], references: [id], onDelete: Cascade)

  @@unique([userId, duelId])
}

model GuestVote {
  id        String   @id @default(cuid()) @db.Text
  duelId    String   @map("duel_id")
  optionId  String   @map("option_id")
  ipHash    String   @map("ip_hash")
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(6)

  duel      Duel       @relation(fields: [duelId], references: [id], onDelete: Cascade)
  option    DuelOption @relation(fields: [optionId], references: [id], onDelete: Cascade)

  @@unique([duelId, ipHash], map: "dueliax_guest_votes_duel_ip_unique")
  @@map("dueliax_guest_votes")
}


enum Role {
  USER
  ADMIN
}
