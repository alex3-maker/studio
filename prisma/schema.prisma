// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String    @id @default(cuid())
  name         String?
  email        String?   @unique
  emailVerified DateTime? @map("email_verified")
  image        String?
  password     String?
  role         Role      @default(USER)
  keys         Int       @default(0)
  duelsCreated Int?      @default(0) @map("duels_created")
  votesCast    Int?      @default(0) @map("votes_cast")
  createdAt    DateTime  @default(now()) @map("created_at")

  duels         Duel[]
  votes         Vote[]
  
  @@map("users")
}

model Duel {
  id          String   @id @default(cuid())
  type        String
  title       String
  description String
  creatorId   String   @map("creator_id")
  status      String
  createdAt   DateTime @default(now()) @map("created_at")
  startsAt    DateTime @map("starts_at")
  endsAt      DateTime @map("ends_at")

  creator     User          @relation(fields: [creatorId], references: [id])
  options     DuelOption[]
  votes       Vote[]
  guestVotes  GuestVote[]

  @@map("Duel")
}

model DuelOption {
  id            String  @id @default(cuid())
  duelId        String  @map("duel_id")
  title         String
  imageUrl      String? @map("image_url")
  affiliateUrl  String? @map("affiliate_url")
  votes         Int     @default(0)

  duel          Duel        @relation(fields: [duelId], references: [id], onDelete: Cascade)
  votes         Vote[]
  guestVotes    GuestVote[]
  
  @@map("DuelOption")
}

model Vote {
  id        String   @id @default(cuid())
  userId    String   @map("user_id")
  duelId    String   @map("duel_id")
  optionId  String   @map("option_id")
  createdAt DateTime @default(now()) @map("created_at")

  user      User       @relation(fields: [userId], references: [id])
  duel      Duel       @relation(fields: [duelId], references: [id])
  option    DuelOption @relation(fields: [optionId], references: [id])

  @@unique([userId, duelId])
  @@map("Vote")
}

model GuestVote {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Text
  duelId    String   @map("duel_id")
  optionId  String   @map("option_id")
  ipHash    String   @map("ip_hash")
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(6)

  duel      Duel      @relation(fields: [duelId], references: [id], onDelete: Cascade)
  option    DuelOption @relation(fields: [optionId], references: [id], onDelete: Cascade)

  @@unique([duelId, ipHash], map: "dueliax_guest_votes_duel_ip_unique")
  @@map("dueliax_guest_votes")
}


enum Role {
  USER
  ADMIN
}
