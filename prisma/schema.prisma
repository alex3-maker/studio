// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  password      String?
  role          String    @default("USER") // ADMIN or USER
  keys          Int       @default(0)
  duelsCreated  Int       @default(0)
  votesCast     Int       @default(0)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  duels         Duel[]
  votes         Vote[]
}

model Duel {
  id          String       @id @default(cuid())
  type        String // A_VS_B or LIST
  title       String
  description String?
  status      String       @default("DRAFT") // DRAFT, SCHEDULED, ACTIVE, CLOSED, INACTIVE
  createdAt   DateTime     @default(now())
  startsAt    DateTime
  endsAt      DateTime
  creatorId   String
  creator     User         @relation(fields: [creatorId], references: [id], onDelete: Cascade)
  options     DuelOption[]
  votes       Vote[]
  guestVotes  GuestVote[]

  @@index([creatorId])
}

model DuelOption {
  id           String      @id @default(cuid())
  title        String
  imageUrl     String?
  affiliateUrl String?
  votes        Int         @default(0)
  duelId       String
  duel         Duel        @relation(fields: [duelId], references: [id], onDelete: Cascade)
  userVotes    Vote[]
  guestVotes   GuestVote[]

  @@index([duelId])
}

model Vote {
  id        String   @id @default(cuid())
  userId    String
  duelId    String
  optionId  String
  createdAt DateTime @default(now())

  user     User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  duel     Duel       @relation(fields: [duelId], references: [id], onDelete: Cascade)
  option   DuelOption @relation(fields: [optionId], references: [id], onDelete: Cascade)

  @@unique([userId, duelId])
  @@index([optionId])
}

model GuestVote {
  id        String   @id @default(cuid())
  ipHash    String // Anonymized IP hash
  duelId    String
  optionId  String
  createdAt DateTime @default(now())

  duel     Duel     @relation(fields: [duelId], references: [id], onDelete: Cascade)
  option   DuelOption @relation(fields: [optionId], references: [id], onDelete: Cascade)

  @@unique([ipHash, duelId], name: "dueliax_guest_votes_duel_ip_unique")
  @@index([optionId])
}
